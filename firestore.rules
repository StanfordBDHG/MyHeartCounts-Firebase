rules_version = '2';
service cloud.firestore {
  match /databases/{databaseId}/documents {
    function valueExists(object, property) {
      return (property in object) && object[property] != null;
    }

    function isEqualOptional(object0, property0, object1, property1) {
      return valueExists(object0, property0)
        ? (valueExists(object1, property1) && object0[property0] == object1[property1])
        : !valueExists(object1, property1);
    }

    function isAuthenticated() {
      return request.auth != null 
        && (
          !valueExists(request.auth.token, 'disabled')
          || request.auth.token.disabled == false
        );
    }

    function isAdmin() {
      return isAuthenticated()
        && valueExists(request.auth.token, 'admin')
        && request.auth.token.admin == true;
    }

    function isUser(userId) {
      return isAuthenticated()
        && request.auth.uid == userId;
    }

    function getUser(userId) {
      return get(/databases/$(databaseId)/documents/users/$(userId));
    }


    match /questionnaires/{questionnaireId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /users/{userId} {
      function securityRelatedFieldsDidNotChange() {
        return isEqualOptional(request.resource.data, 'disabled', resource.data, 'disabled');
      }

      allow read: if isAdmin()
        || (request.auth != null && request.auth.uid == userId);

      // Allow creation of user documents when the auth UID matches
      allow create: if isAdmin()
        || (request.auth != null && request.auth.uid == userId);

      allow update: if isAdmin()
        || (securityRelatedFieldsDidNotChange() && isUser(userId));

      allow delete: if isAdmin();
    }

    match /users/{userId}/{collectionName}/{documentId} {
      function isUserWritableCollectionName() {
        // Regex pattern for observation collections
        // This matches any collection ending with "Observations" or "ObservationSeries"
        // and requires at least one character before these suffixes
        // ...also allows HealthObservations_[a-zA-Z]+ collections
        return collectionName.matches('^[A-Za-z]+(Observations|ObservationSeries)$')
          || collectionName.matches('^HealthObservations_[a-zA-Z]+$')
          || collectionName in ['questionnaireResponses', 'workouts'];
      }

      allow read: if isAdmin()
        || (request.auth != null && request.auth.uid == userId);

      allow write: if isAdmin() 
        || (isUser(userId) && isUserWritableCollectionName());
    }
  }
  match /feedback/{id} {
    allow read: if false;
    allow write: if isAuthenticated() && request.auth.uid == id;
  }
}