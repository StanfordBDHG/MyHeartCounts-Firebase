#
# This source file is part of the Stanford Biodesign Digital Health MyHeart Counts open-source project
#
# SPDX-FileCopyrightText: 2025 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: |
          The GitHub deployment environment
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production-us
          - production-uk
  workflow_call:
    inputs:
      environment:
        description: |
          The GitHub deployment environment.
        required: false
        type: string
        default: development

concurrency:
  group: deployment
  cancel-in-progress: false

jobs:
  determineenvironment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      region: ${{ steps.set-region.outputs.region }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine Environment
        id: set-env
        run: |
          if [[ -z "${{ inputs.environment }}" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          fi
      - name: Extract Region from Tag
        id: set-region
        run: |
          if [[ "${{ github.ref }}" == refs/tags/region-* ]]; then
            REGION="${{ github.ref_name }}"
            REGION="${REGION#region-}"
            echo "region=$REGION" >> $GITHUB_OUTPUT
          else
            echo "region=" >> $GITHUB_OUTPUT
          fi

  vars:
    name: Inject Environment Variables In Deployment Workflow
    needs: determineenvironment
    runs-on: ubuntu-latest
    environment: ${{ needs.determineenvironment.outputs.environment }}
    outputs:
      FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
    steps:
      - run: |
          echo "Injecting Environment Variables In Deployment Workflow: ${{ vars.FIREBASE_PROJECT_ID }}"

  buildandtest:
    name: Build and Test
    needs: determineenvironment
    uses: ./.github/workflows/build-and-test.yml
    permissions:
      contents: read
      checks: write
    secrets: inherit

  # For non-production environments, use the original single deployment
  deployfirebase:
    name: Deploy Firebase Project
    if: needs.determineenvironment.outputs.environment != 'production'
    needs: [buildandtest, determineenvironment, vars]
    uses: StanfordBDHG/.github/.github/workflows/firebase-deploy.yml@v2
    permissions:
      contents: read
    with:
      customcommand: "npm run prepare"
      environment: ${{ needs.determineenvironment.outputs.environment }}
      arguments: '--project ${{ needs.vars.outputs.FIREBASE_PROJECT_ID }}'
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}

  # Deploy to US first
  deployfirebase-production-us:
    name: Deploy Firebase Project (Production US)
    if: needs.determineenvironment.outputs.environment == 'production'
    needs: [buildandtest, determineenvironment]
    uses: StanfordBDHG/.github/.github/workflows/firebase-deploy.yml@v2
    permissions:
      contents: read
    with:
      customcommand: "npm run prepare"
      environment: production-us
      arguments: '--project ${{ vars.FIREBASE_PROJECT_ID }}'
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}

  # Deploy to UK after US succeeds
  deployfirebase-production-uk:
    name: Deploy Firebase Project (Production UK)
    if: needs.determineenvironment.outputs.environment == 'production'
    needs: [deployfirebase-production-us, determineenvironment]
    uses: StanfordBDHG/.github/.github/workflows/firebase-deploy.yml@v2
    permissions:
      contents: read
    with:
      customcommand: "npm run prepare"
      environment: production-uk
      arguments: '--project ${{ vars.FIREBASE_PROJECT_ID }}'
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS_BASE64: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}